generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://a3laxi:dYE6JkwLBPn0@ep-icy-mountain-203510.eu-central-1.aws.neon.tech/neondb"
}

model auth_group {
  id                     BigInt                   @id(map: "idx_16601_auth_group_pkey") @default(autoincrement())
  name                   String?                  @unique(map: "idx_16601_sqlite_autoindex_auth_group_1")
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              BigInt           @id(map: "idx_16565_auth_group_permissions_pkey") @default(autoincrement())
  group_id        BigInt?
  permission_id   BigInt?
  auth_group      auth_group?      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_permission auth_permission? @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([group_id, permission_id], map: "idx_16565_auth_group_permissions_group_id_permission_id_0cd325b")
  @@index([group_id], map: "idx_16565_auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "idx_16565_auth_group_permissions_permission_id_84c5c92e")
}

model auth_permission {
  id                         BigInt                       @id(map: "idx_16594_auth_permission_pkey") @default(autoincrement())
  content_type_id            BigInt?
  codename                   String?
  name                       String?
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type?         @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "idx_16594_auth_permission_content_type_id_codename_01ab375a_uni")
  @@index([content_type_id], map: "idx_16594_auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         BigInt                       @id(map: "idx_16608_auth_user_pkey") @default(autoincrement())
  password                   String?
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean?
  username                   String?                      @unique(map: "idx_16608_sqlite_autoindex_auth_user_1")
  last_name                  String?
  email                      String?
  is_staff                   Boolean?
  is_active                  Boolean?
  date_joined                DateTime?                    @db.Timestamptz(6)
  first_name                 String?
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         BigInt      @id(map: "idx_16570_auth_user_groups_pkey") @default(autoincrement())
  user_id    BigInt?
  group_id   BigInt?
  auth_group auth_group? @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user  auth_user?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, group_id], map: "idx_16570_auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "idx_16570_auth_user_groups_group_id_97559544")
  @@index([user_id], map: "idx_16570_auth_user_groups_user_id_6a12ed8b")
}

model auth_user_user_permissions {
  id              BigInt           @id(map: "idx_16575_auth_user_user_permissions_pkey") @default(autoincrement())
  user_id         BigInt?
  permission_id   BigInt?
  auth_permission auth_permission? @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user       auth_user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, permission_id], map: "idx_16575_auth_user_user_permissions_user_id_permission_id_14a6")
  @@index([permission_id], map: "idx_16575_auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "idx_16575_auth_user_user_permissions_user_id_a95ead1b")
}

model bapz {
  id          BigInt  @id(map: "idx_16558_bapz_bapz_pkey") @default(autoincrement())
  productname String?
  price       String?
  color       String?
  size        String?
  category    String?
}

model customer {
  id       BigInt  @id(map: "idx_16620_bapz_customer_pkey") @default(autoincrement())
  pwd      String?
  email    String? @unique(map: "idx_16620_sqlite_autoindex_bapz_customer_1")
  ids      BigInt?
  commands String?
  jwt      String?
  frstname String?
  lstname  String?
  usrname  String?
}


model django_admin_log {
  id                  BigInt               @id(map: "idx_16580_django_admin_log_pkey") @default(autoincrement())
  object_id           String?
  object_repr         String?
  action_flag         Int?                 @db.SmallInt
  change_message      String?
  content_type_id     BigInt?
  user_id             BigInt?
  action_time         DateTime?            @db.Timestamptz(6)
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_user           auth_user?           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([content_type_id], map: "idx_16580_django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "idx_16580_django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               BigInt             @id(map: "idx_16587_django_content_type_pkey") @default(autoincrement())
  app_label        String?
  model            String?
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "idx_16587_django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt    @id(map: "idx_16551_django_migrations_pkey") @default(autoincrement())
  app     String?
  name    String?
  applied DateTime? @db.Timestamptz(6)
}

model django_session {
  session_key  String    @id(map: "idx_16614_sqlite_autoindex_django_session_1")
  session_data String?
  expire_date  DateTime? @db.Timestamptz(6)

  @@index([expire_date], map: "idx_16614_django_session_expire_date_a5c62663")
}
